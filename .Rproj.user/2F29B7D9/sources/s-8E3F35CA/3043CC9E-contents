library(koboquest)
library(readxl)

survey <- readxl::read_excel("./msna/input/questionnaire_kobo_msna_2020_FINAL_v6.xlsx", sheet = "survey")
choices <- readxl::read_excel("./msna/input/questionnaire_kobo_msna_2020_FINAL_v6.xlsx", sheet = "choices")
data<-load_data("./msna/input/merged_data.csv")

'%!in%' = Negate('%in%')

# data<-matrix(NA,0,length(survey$name[which(!is.na(survey$name))]))
# colnames(data)<-survey$name[which(!is.na(survey$name))]
# data<-as.data.frame(data)

questionnaire <- koboquest::load_questionnaire(data = data,
                                               questions = survey,
                                               choices = choices,
                                               choices.label.column.to.use ="label")

var_tobedeleted <- read_excel("./msna/input/variables_a_supprimer.xlsx")
var_tobedeleted$variables_a_supprimer <- tolower(var_tobedeleted$variables_a_supprimer)

for( i in 1:nrow(var_tobedeleted)){
  if(var_tobedeleted$variables_a_supprimer[i] %in% names(data)){
    data <- data %>% select(-var_tobedeleted$variables_a_supprimer[i])
  }
}

map_to_datatypes<-function(df,questionnaire){
  
  types <- sapply(names(df),questionnaire$question_type,
                  from.questionnaire = T,
                  from.data = T,
                  data = df)
  
  sm_choices <- purrr::map(names(df),
                           questionnaire$question_is_sm_choice) %>% unlist
  
  raw_q <- questionnaire$raw_questionnaire()$questions
  
  types_raw <- raw_q[match(names(df),raw_q$name),"type"]   
  types[types %in% c("select_one","select_multiple")]<-"categorical"
  types[sm_choices]<-"sm_choice"
  types[types=="numeric"] <- "numerical"
  types[types_raw == "text"] <- "text"
  types[types_raw == "calculate"] <- "numerical"
  types[types_raw == "calculate"] <- "numerical"
  types[str_detect(types_raw$type,"note|begin|end|group")] <-NA
  
  types
}

make_analysisplan_all_vars <- function(df,
                                       questionnaire,
                                       repeat.for.variable=NA,
                                       independent.variable = NA,
                                       hypothesis.type = "direct_reporting"){
  
  
  if(!is.data.frame(df)){stop(" df must be a data frame")}
  
  types <- map_to_datatypes(df,questionnaire)
  types <- types[!is.na(types)]
  
  if(!is.na(independent.variable)){
    if(any(types[names(types)==independent.variable]!="categorical")){stop("independent variable must be categorical (and can not be select_multiple TRUE/FALSE column")}
    independent.variable.type<-types[names(types)==independent.variable]
  }else{
    independent.variable.type<-NA
  }
  good_dependent_variables<-names(types)[types %in% c("numerical","numeric","categorical")]
  
  analysisplan<-data.frame(research.question = "RQ: not specified (automatic analysisplan)",
                           sub.research.question = "sub RQ not specified (automatic analysisplan)",
                           repeat.for.variable=repeat.for.variable,
                           independent.variable=independent.variable,
                           independent.variable.type=independent.variable.type,
                           dependent.variable=good_dependent_variables,
                           dependent.variable.type = types[good_dependent_variables],
                           hypothesis.type = hypothesis.type,
                           stringsAsFactors = F)
  
}


dap<-make_analysisplan_all_vars(df = data,questionnaire = questionnaire)

dap<- dap %>% filter(dependent.variable %!in% hypegrammaR:::to_alphanumeric_lowercase(var_tobedeleted$variables_a_supprimer))
dap %>% write_csv("./msna/input/dap_21092020.csv")
